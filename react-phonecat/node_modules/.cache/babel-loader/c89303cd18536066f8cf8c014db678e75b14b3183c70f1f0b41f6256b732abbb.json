{"ast":null,"code":"import axios from 'axios';\n\n// We'll use axios instead of $resource from AngularJS\nconst api = axios.create({\n  baseURL: '/assets/',\n  // Points to public/assets directory\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nconst PhoneService = {\n  // Get all phones\n  getPhones: async () => {\n    try {\n      const response = await api.get('phones/phones.json');\n      // Ensure we return an array\n      return Array.isArray(response.data) ? response.data : [];\n    } catch (error) {\n      console.error('Error fetching phones:', error);\n      return [];\n    }\n  },\n  // Get a specific phone by ID\n  getPhone: async phoneId => {\n    try {\n      const response = await api.get(`phones/${phoneId}.json`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching phone ${phoneId}:`, error);\n      return null;\n    }\n  }\n};\nexport default PhoneService;","map":{"version":3,"names":["axios","api","create","baseURL","headers","PhoneService","getPhones","response","get","Array","isArray","data","error","console","getPhone","phoneId"],"sources":["/Users/Sergey_Shakhmatov/Projects/epam/codemie/angularjs-to-react-ai-conversion/react-phonecat/src/services/PhoneService.js"],"sourcesContent":["import axios from 'axios';\n\n// We'll use axios instead of $resource from AngularJS\nconst api = axios.create({\n  baseURL: '/assets/', // Points to public/assets directory\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nconst PhoneService = {\n  // Get all phones\n  getPhones: async () => {\n    try {\n      const response = await api.get('phones/phones.json');\n      // Ensure we return an array\n      return Array.isArray(response.data) ? response.data : [];\n    } catch (error) {\n      console.error('Error fetching phones:', error);\n      return [];\n    }\n  },\n\n  // Get a specific phone by ID\n  getPhone: async (phoneId) => {\n    try {\n      const response = await api.get(`phones/${phoneId}.json`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching phone ${phoneId}:`, error);\n      return null;\n    }\n  },\n};\n\nexport default PhoneService;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,UAAU;EAAE;EACrBC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,MAAMC,YAAY,GAAG;EACnB;EACAC,SAAS,EAAE,MAAAA,CAAA,KAAY;IACrB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,oBAAoB,CAAC;MACpD;MACA,OAAOC,KAAK,CAACC,OAAO,CAACH,QAAQ,CAACI,IAAI,CAAC,GAAGJ,QAAQ,CAACI,IAAI,GAAG,EAAE;IAC1D,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,OAAO,EAAE;IACX;EACF,CAAC;EAED;EACAE,QAAQ,EAAE,MAAOC,OAAO,IAAK;IAC3B,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,UAAUO,OAAO,OAAO,CAAC;MACxD,OAAOR,QAAQ,CAACI,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwBG,OAAO,GAAG,EAAEH,KAAK,CAAC;MACxD,OAAO,IAAI;IACb;EACF;AACF,CAAC;AAED,eAAeP,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}